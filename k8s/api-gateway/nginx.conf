worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Debug connection issues
    resolver 10.96.0.10 valid=10s; # Kubernetes DNS resolver
    resolver_timeout 5s;

    # Super detailed logging
    log_format debug_log 'Time: $time_local '
                       'Request: "$request" Status: $status '
                       'UA: "$http_user_agent" Referer: "$http_referer" '
                       'Remote: $remote_addr Upstream: $upstream_addr '
                       'Upstream time: Connect=$upstream_connect_time Header=$upstream_header_time Response=$upstream_response_time '
                       'Upstream Status: $upstream_status '
                       'Total: $request_time uri=$request_uri args=$args';

    access_log /dev/stdout debug_log;
    error_log /dev/stderr debug;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Upstream services with more debugging
    upstream auth_service {
        server auth-service:80 max_fails=0;
        keepalive 32;
    }

    upstream restaurant_service {
        server restaurant-service:80;
    }

    upstream order_service {
        server order-service:80;
    }

    upstream customer_service {
        server customer-service:80;
    }

    upstream delivery_service {
        server delivery-service:80;
    }

    upstream dev_service {
        server third-party-dev-service:80;
    }

    map $request_uri $api_uri {
        ~^/auth/(.*)   /api/auth/$1;
        default       $request_uri;
    }

    # Debug log for authentication routes
    map $uri $auth_log {
        ~^/auth/(.*)   "Auth route: $uri -> /$1";
        default       "";
    }

    server {
        listen 80;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'healthy\n';
        }

        # Direct debug test endpoint for auth service
        location /debug-auth {
            access_log /dev/stdout debug_log buffer=32k flush=1s;
            
            # Test direct connection to auth service
            add_header Content-Type "text/plain";
            
            # Return detailed debugging info
            return 200 "Debug Info:
            Timestamp: $time_local
            Request headers: $http_host, $http_user_agent
            Auth Service DNS Test: Running...
            ";
        }
        
        # Test auth connection directly
        location /test-auth-connection {
            proxy_pass http://auth-service:80/;
            
            proxy_connect_timeout 10s;
            proxy_read_timeout 10s;
            
            add_header X-Debug-Connection "Direct test to auth-service";
            add_header X-Debug-Upstream $upstream_addr;
            add_header X-Debug-Status $upstream_status;
            
            access_log /dev/stdout debug_log buffer=32k flush=1s;
        }
        
        # Direct test to auth service - no URL rewriting
        location /direct-auth/ {
            access_log /dev/stdout debug_log buffer=32k flush=1s;
            error_log /dev/stderr debug;
            
            # Directly pass to the API auth path
            proxy_pass http://auth_service/api/auth/;
            
            proxy_set_header Content-Type $http_content_type;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Debug headers
            add_header X-Debug-Path $request_uri;
            add_header X-Debug-Method $request_method;
            add_header X-Debug-Content-Type $http_content_type;
            add_header X-Debug-Upstream $upstream_addr;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Auth service routes
        location /auth/ {
            access_log /dev/stdout debug_log buffer=32k flush=1s;
            
            # Log detailed request info
            error_log /dev/stderr debug;

            # Basic debugging endpoint
            if ($request_uri = "/auth/debug") {
                add_header Content-Type "text/plain";
                return 200 "Auth service debug info:
                Upstream: auth-service:80
                Headers: $http_authorization
                URI: $uri
                Request URI: $request_uri
                Map result: $api_uri
                Auth Log: $auth_log
                ";
            }
            
            # Log request body for debugging
            client_body_in_file_only clean;
            client_body_buffer_size 16k;
            
            proxy_pass http://auth_service$api_uri;
            
            # Make sure to always set Content-Type header
            proxy_set_header Content-Type $http_content_type;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;

            # Debug headers
            add_header X-Debug-Path $request_uri;
            add_header X-Debug-Uri $api_uri;
            add_header X-Debug-Host $http_host;
            add_header X-Debug-Content-Type $http_content_type;
            add_header X-Debug-Method $request_method;
            add_header X-Debug-Upstream $upstream_addr;
            add_header X-Debug-Response-Time $upstream_response_time;
            add_header X-Debug-Connect-Time $upstream_connect_time;
            add_header X-Debug-Status $upstream_status;
            add_header X-Debug-Auth-Log $auth_log;

            # Increase timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Restaurant service routes
        location /restaurants/ {
            auth_request /auth/verify;
            proxy_pass http://restaurant_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Order service routes
        location /orders/ {
            auth_request /auth/verify;
            proxy_pass http://order_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Customer service routes
        location /customers/ {
            auth_request /auth/verify;
            proxy_pass http://customer_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Delivery service routes
        location /delivery/ {
            auth_request /auth/verify;
            proxy_pass http://delivery_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Dev service routes
        location /dev/ {
            auth_request /auth/verify;
            proxy_pass http://dev_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Explicitly log all auth verification attempts
        location = /auth/verify {
            internal;
            access_log /dev/stdout debug_log buffer=32k flush=1s;
            proxy_pass http://auth_service/api/auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
            
            # Add debug headers in error responses
            proxy_intercept_errors on;
            proxy_next_upstream error timeout http_502;
        }

        # Default error response
        error_page 404 /404.html;
        location = /404.html {
            default_type application/json;
            return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
        }

        error_page 502 /502.html;
        location = /502.html {
            default_type application/json;
            return 502 '{"error":"Bad Gateway","message":"The upstream service returned an invalid response"}';
        }

        error_page 504 /504.html;
        location = /504.html {
            default_type application/json;
            return 504 '{"error":"Gateway Timeout","message":"The upstream service is not responding"}';
        }
    }
} 