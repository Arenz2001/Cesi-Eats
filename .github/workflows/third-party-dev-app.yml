name: Third Party Dev App CI/CD

on:
  push:
    paths:
      - "apps/frontend/third-party-dev-app/**"
      - ".github/workflows/third-party-dev-app.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: arenz2001/cesi-eats/third-party-dev-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Debug image tags
        run: |
          echo "Tags to be used:"
          echo "${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/frontend/third-party-dev-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image push
        run: |
          echo "Verifying pushed image..."
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml
          chmod 600 kubeconfig.yaml
          export KUBECONFIG="$PWD/kubeconfig.yaml"
          echo "=== Kubectl config ==="
          kubectl config view --raw
          echo "=== Testing connection ==="
          kubectl cluster-info

      - name: Create or update deployment
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
        run: |
          kubectl delete service third-party-dev-app --ignore-not-found
          sed -i "s|ghcr.io/[Aa]renz2001/cesi-eats/third-party-dev-app:[^ ]*|ghcr.io/arenz2001/cesi-eats/third-party-dev-app:sha-${{ github.sha }}|g" k8s/third-party-dev-app/deployment.yaml
          kubectl apply -f k8s/third-party-dev-app/deployment.yaml
          kubectl rollout status deployment/third-party-dev-app

      - name: Debug deployment
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
        run: |
          echo "Checking deployment status..."
          kubectl get deployment third-party-dev-app -o yaml
          echo "\nChecking pods..."
          kubectl get pods
          echo "\nChecking service..."
          kubectl get service third-party-dev-app
          echo "\nDescribing pods..."
          kubectl describe pods -l app=third-party-dev-app
