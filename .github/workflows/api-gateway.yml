name: API Gateway CI/CD

on:
  push:
    branches:
      - main
      - feature/api-gateway
    paths:
      - "k8s/api-gateway/**"
      - ".github/workflows/api-gateway.yml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: arenz-proxmox/cesieats/api-gateway

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: k8s/api-gateway
          file: k8s/api-gateway/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.28.2"

      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Update deployment image
        run: |
          # Get the exact image tag we just built
          IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' ' | awk '{print $1}')

          # Update the deployment with the new image
          kubectl set image deployment/api-gateway api-gateway=$IMAGE_TAG -n cesieats

          # Verify the rollout
          kubectl rollout status deployment/api-gateway -n cesieats
